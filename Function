//反转单向和双向链表 
//【题目】 分别实现反转单向链表和反转双向链表的函数。 
//【要求】 如果链表长度为N，时间复杂度要求为O(N)，额外空间 复杂度要求为O(1)
#include<iostream>
#include<stdlib.h>
#include<list>
using namespace std;



class node
{
public:
	int value;
	node *next;
	node(int data)
	{
		value = data;
	}
};

node *reverseList(node *head);

void printList(node *head)
{
	while (head != NULL)
	{
		cout << head->value << " ";
		head = head->next;
	}
	cout << endl;
}

int main()
{
	node *head1 = new node(1);
	head1->next = new node(2);
	head1->next->next = new node(3);
	printList(head1);
	head1 = reverseList(head1);
	printList(head1);
	system("pause");
	return 0;
}

node *reverseList(node *head)
{
	node *pre = NULL;
	node *next = NULL;
	while (head != NULL)
	{
		next = head->next;
		head->next = pre;
		pre = head;
		head = next;
	}
	return pre;
}
